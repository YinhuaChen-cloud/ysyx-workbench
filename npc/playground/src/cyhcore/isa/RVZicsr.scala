// import chisel3._
// import chisel3.util._

// object RVZicsrInstr extends HasInstrType {
//   def CSRRW   = BitPat("b????????????_?????_001_?????_1110011")
//   def CSRRS   = BitPat("b????????????_?????_010_?????_1110011")
//   def CSRRC   = BitPat("b????????????_?????_011_?????_1110011")
//   def CSRRWI  = BitPat("b????????????_?????_101_?????_1110011")
//   def CSRRSI  = BitPat("b????????????_?????_110_?????_1110011")
//   def CSRRCI  = BitPat("b????????????_?????_111_?????_1110011")

//   val table = Array(
//     CSRRW          -> List(InstrI, FuType.csr, CSROpType.wrt),
//     CSRRS          -> List(InstrI, FuType.csr, CSROpType.set),
//     CSRRC          -> List(InstrI, FuType.csr, CSROpType.clr),
//     CSRRWI         -> List(InstrI, FuType.csr, CSROpType.wrti),
//     CSRRSI         -> List(InstrI, FuType.csr, CSROpType.seti),
//     CSRRCI         -> List(InstrI, FuType.csr, CSROpType.clri)
//       ADD       -> List(Y, BR_N  , OP1_RS1, OP2_RS2, ALU_ADD , WB_ALU, WREG_1, WMEM_0, MEM_MSK_X , ALU_MSK_X, SIGN_Y),
//   )
// }
